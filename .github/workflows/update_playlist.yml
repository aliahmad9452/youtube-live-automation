name: Update Playlist

on:
  schedule:
    - cron: "0 */4 * * *"  # Every 4 hours
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GH_TOKEN }}  # üîê Use personal token

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.x

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Run script
      env:
        YT_API_KEY: ${{ secrets.YT_API_KEY }}
      run: python youtube_automation.py

    - name: Commit and push changes
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "actions@github.com"
        git add playlist.json
        git commit -m "Update playlist" || echo "No changes"
        git push origin main

  cleanup:
    needs: update
    runs-on: ubuntu-latest

    steps:
    - name: Install GitHub CLI
      run: sudo apt-get install gh -y

    - name: Authenticate GitHub CLI
      run: echo "${{ secrets.GH_TOKEN }}" | gh auth login --with-token

    - name: Delete old workflow runs
      run: |
        REPO="${{ github.repository }}"
        WORKFLOW_NAME="Update Playlist"
        MAX_RUNS=5

        echo "Fetching workflow ID for: $WORKFLOW_NAME"
        WORKFLOW_ID=$(gh api repos/$REPO/actions/workflows | jq -r ".workflows[] | select(.name==\"$WORKFLOW_NAME\") | .id")

        echo "Deleting old workflow runs for workflow ID $WORKFLOW_ID, keeping latest $MAX_RUNS"
        RUN_IDS=$(gh api "repos/$REPO/actions/workflows/$WORKFLOW_ID/runs?per_page=100" | jq -r ".workflow_runs[] | .id" | tail -n +$((MAX_RUNS+1)))

        for RUN_ID in $RUN_IDS; do
          echo "Deleting run ID: $RUN_ID"
          gh api -X DELETE repos/$REPO/actions/runs/$RUN_ID
        done
